version: 0.2

phases:
  install:
    commands:
      - echo "Executing Dotnet restore command to ensure all packages are installed"
      - dotnet restore Album-Api
    build:
      on-failure: ABORT
      commands:
        - echo "Building the Web API backend..."
        - dotnet build Album-Api/Album.Api
        - echo "Build completed."
        - echo "Running Unit tests..." # These 4 command lines could be moved to post-build phase too.
        - dotnet test Album-Api --filter Album.Api.Tests.GreetingServiceTest --logger "console;verbosity=detailed"
        - echo "Running Integration tests..."
        - dotnet test Album-Api --filter Album.Api.Tests.IntegrationTest --logger "console;verbosity=detailed"
        - echo "Creating a release build..." # To create the folder required by Dockerfile
        - dotnet publish -c Release Album-Api/Album.Api
        - echo "Release build completed."
      post-build:
        commands:
          - echo Logging in to Amazon ECR...
          - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 374872396823.dkr.ecr.us-east-1.amazonaws.com
          - echo "Creating Image from Dockerfile..."
          - docker build -t cnsd/album .
          - echo "Tagging image to prepare for push to ECR..."
          - docker tag cnsd/album:latest 374872396823.dkr.ecr.us-east-1.amazonaws.com/cnsd/album:$CODEBUILD_BUILD_NUMBER
          - echo "Pushing image to ECR..."
          - docker push 374872396823.dkr.ecr.us-east-1.amazonaws.com/cnsd/album:$CODEBUILD_BUILD_NUMBER
